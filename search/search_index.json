{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Javascript et IA","text":""},{"location":"#introduction-au-langage-p5js","title":"Introduction au langage P5JS","text":""},{"location":"#preparatifs","title":"Pr\u00e9paratifs","text":"<p>P5JS est une biblioth\u00e8que Javascript reprenant les concepts fondamentaux du langage Processing.</p> <p> </p> <p>Il permet la r\u00e9alisation de sketch interactifs qui s'int\u00e8grent facilement dans un environnement WEB. Pour cela, une solution est de se rendre sur l'\u00e9diteur WEB en cliquant ici puis de cr\u00e9er un nouveau compte.  </p> <p>Vous obtenez alors l'interface :</p> <p> </p> <p>Dans P5JS (comme dans Processing) il existe des fonctions pr\u00e9d\u00e9finies avec chacune un r\u00f4le sp\u00e9cifique. Ici, on voit :</p> <ul> <li>la fonction setup : qui g\u00e8re l'initialisation du sketch ;</li> <li>la fonction draw  : qui g\u00e8re le dessin du sketch.</li> </ul> <p>On cr\u00e9e une zone de dessin (canvas) et on y met un fond gris (background) que l'on dessine \u00e0 chaque fois que cela est n\u00e9cessaire.</p>"},{"location":"#dessiner","title":"Dessiner","text":"<p>Pour dessiner sur le canvas, P5JS utilise un syst\u00e8me de coordonn\u00e9es classique o\u00f9 l'origine se trouve dans le coin sup\u00e9rieur gauche.</p> <p> </p> <p>Par exemple, pour dessiner un cercle de centre \\((50, 50)\\) et de rayon \\(20\\), on \u00e9crit dans la fonction draw :</p> Dessiner un cercle<pre><code>function draw() {\n  background(220);\n  circle(50, 50, 20);\n}\n</code></pre> <p>ce qui donne le canvas ci-dessous :</p> <p> </p> <p>Il est \u00e9videmment possible de customiser les dessins \u00e0 l'aide de fonctions pr\u00e9sent\u00e9es dans le tableau ci-dessous :</p> Fonction Argument(s) R\u00f4le Exemple stroke une couleur Change la couleur du contour de la forme dessin\u00e9e stroke(255, 255, 0) ou stroke('orange') strokeWeight un nombre Change la taille du contour de la forme strokeWeight(10) fill une couleur Rempli la forme d'une couleur donn\u00e9e fill(128, 10, 54) <p>Par exemple, le code :</p> Customiser son dessin<pre><code>function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n\n  stroke(200, 15, 10);\n  strokeWeight(5);\n  fill(20, 150, 250);\n  circle(200, 200, 100);\n\n  stroke(20, 150, 250);\n  strokeWeight(10);\n  fill(200, 15, 10);\n  rect(10, 10, 150, 70);\n\n  stroke(15, 0, 100);\n  strokeWeight(1);\n  fill(20, 200, 30);\n  square(300, 300, 50);\n}\n</code></pre> <p>produit le dessin suivant :</p> <p> </p> <p>Astuce pour les couleurs</p> <p>Il est possible d'\u00e9crire une couleur au format RGB en tapant <code>'rgb'</code> (entre quote), une petite palette est alors propos\u00e9e pour choisir la couleur directement.</p> <p> </p> <p>Exercice</p> <ol> <li>Repr\u00e9senter la cible ci-dessous :</li> </ol> <p> </p> <p>On pourra utiliser la fonction translate pour d\u00e9placer l'origine du rep\u00e8re et ainsi simplifier les coordonn\u00e9es. On utilisera aussi la fonction line pour tracer une ligne et strokeCap pour g\u00e9rer leur forme.</p>"},{"location":"#interactivite","title":"Interactivit\u00e9","text":"<p>P5JS g\u00e8re automatiquement certains \u00e9v\u00e8nements li\u00e9s \u00e0 la position de la souris et \u00e0 la gestion du clavier. Par exemple, tout au long du programme, les variables mouseX et mouseY correspondent \u00e0 la position de la souris. Ainsi, le code suivant :</p> Suivre le curseur<pre><code>function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n\n  stroke(0);\n  strokeWeight(5);\n  fill(255);\n  circle(mouseX, mouseY, 100);\n}\n</code></pre> <p>produit le r\u00e9sultat suivant :</p> <p> </p> <p>Pour le clavier, on peut utiliser la fonction keyPressed comme dans l'exemple :</p> Avec le clavier<pre><code>let x, y;\n\nfunction setup() {\n  createCanvas(400, 400);\n  x = 200;\n  y = 200;\n}\n\nfunction draw() {\n  background(220);\n\n  stroke(0);\n  strokeWeight(5);\n  fill('#CF1B1B');\n  square(x, y, 50);\n}\n\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    x = x - 10;\n  }\n  if (keyCode === RIGHT_ARROW) {\n    x = x + 10;\n  }\n  if (keyCode === UP_ARROW) {\n    y = y - 10;\n  }\n  if (keyCode === DOWN_ARROW) {\n    y = y + 10;\n  }\n}\n</code></pre> <p>qui produit le r\u00e9sultat :</p> <p> </p> <p>D\u00e9claration de variables</p> <p>Remarquez que pour d\u00e9clarer des variables, on utilise le mot cl\u00e9 <code>let</code>. On d\u00e9clare plut\u00f4t les variables en global pour pouvoir les utiliser dans plusieurs fonctions.</p>"},{"location":"#images-et-p5js","title":"Images et P5JS","text":""},{"location":"#chargement-et-affichage","title":"Chargement et affichage","text":"<p>Avant d'afficher des images, il faut qu'elles soient accessibles. Pour cela, il faut les importer dans le projet (vu que l'on travaille avec un \u00e9diteur en ligne).  </p> <p>On souhaite importer l'image :</p> <p> </p> <p>que vous pouvez t\u00e9l\u00e9charger ici.</p> <p>Pour importer cette image, cliquez sur l'extension de la barre lat\u00e9rale gr\u00e2ce au bouton situ\u00e9 sous le symbole Lecture.</p> <p> </p> <p>Cr\u00e9ez un dossier nomm\u00e9 images \u00e0 l'aide du bouton \\(+\\), puis en se pla\u00e7ant dans ce dossier choisissez T\u00e9l\u00e9verser pour importer une image \u00e0 l'aide d'un glisser-d\u00e9poser. </p> <p> </p> <p>Une fois l'image disponible dans l'espace WEB, il faut l'afficher dans le canvas. Pour afficher une image, il faut d\u00e9j\u00e0 qu'elle soit charg\u00e9e. C'est le r\u00f4le de la fonction preload. Il s'agit d'une fonction pr\u00e9d\u00e9finie qui va effectuer le travail avant l'affichage de la page WEB.  </p> <p>Le code ci-dessous en montre une utilisation simple.</p> Chargement et affichage d'une image<pre><code>let img;\n\nfunction preload(){\n  img = loadImage('./images/guitare.png');\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  image(img, 0, 0, 400, 400);\n}\n</code></pre> <p>qui produit le r\u00e9sultat :</p> <p> </p> <p>Warning</p> <p>Remarquez la pr\u00e9sence du Loading... le temps du chargement de l'image.</p> <p>Affichage d'une image</p> <p>Pour afficher une image, on utilise la fonction image. Il est possible de redimensionner l'image pass\u00e9e en argument.</p>"},{"location":"#flux-video","title":"Flux vid\u00e9o","text":"<p>Il est \u00e9galement possible de r\u00e9cup\u00e9rer le flux d'une Webcam et de l'afficher dans le Canvas avec les fonctions suivantes :</p> <ul> <li>createCapture : \u00e0 laquelle on fournit l'argument VIDEO ;</li> <li>image : pour afficher l'image associ\u00e9e \u00e0 la capture vid\u00e9o.</li> </ul> <p>Attention</p> <p>Il est important de cacher la vid\u00e9o captur\u00e9e sous peine d'avoir deux version de l'image superpos\u00e9es.</p> <p>Le code suivant permet d'afficher le flux associ\u00e9 \u00e0 la Webcam :</p> Affichage de la webcam<pre><code>let video;\n\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.hide();\n}\n\nfunction draw() {\n  background(220);\n  image(video, 0, 0);\n}\n</code></pre> <p>qui produit le r\u00e9sultat :</p> <p> </p>"},{"location":"#intelligence-artificielle","title":"Intelligence artificielle","text":""},{"location":"#la-bibliotheque-ml5","title":"La biblioth\u00e8que ML5","text":"<p>ML5.js vise \u00e0 rendre l'apprentissage automatique (machine learning) accessible \u00e0 un large public d'artistes, de codeurs cr\u00e9atifs et d'\u00e9tudiants. La biblioth\u00e8que donne acc\u00e8s aux algorithmes et mod\u00e8les d'apprentissage automatique dans le navigateur, en s'appuyant sur TensorFlow.js sans aucune autre d\u00e9pendance externe.</p> <p>Pour pouvoir utiliser cette biblioth\u00e8que, il faut la relier \u00e0 notre sketch en modifiant la page index.html.</p> <p>Commencez par ouvrir l'arborescence de gauche :</p> <p> </p> <p>ouvrez le fichier index.html et ajoutez la ligne :</p> Lier la biblioth\u00e8que<pre><code>&lt;script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"&gt;&lt;/script&gt;\n</code></pre> <p> </p> <p>Une fois li\u00e9e, il est possible d'utiliser cette biblioth\u00e8que pour reconna\u00eetre des images.</p>"},{"location":"#reconnaissance-dimage","title":"Reconnaissance d'image","text":"<p>La reconnaissance d'image consiste \u00e0 associer un nom \u00e0 une image de fa\u00e7on \u00e0 ce que ce nom soit coh\u00e9rent avec ce que repr\u00e9sente l'image. Il y a donc l'id\u00e9e de probabilit\u00e9 derri\u00e8re la reconnaissance d'image et la performance d'un mod\u00e8le se mesure donc sur sa capacit\u00e9 \u00e0 ne pas commettre d'erreur.  </p> <p>La biblioth\u00e8que ML5 propose plusieurs mod\u00e8les dont MobileNet bas\u00e9e sur une collection d'images lab\u00e9lis\u00e9es appel\u00e9e ImageNet. On peut retrouver une partie de cette collection \u00e0 l'adresse MobileNet Sample.</p>"},{"location":"#mobilenet","title":"MobileNet","text":"<p>Pour charger le mod\u00e8le MobileNet on utilise une variable <code>classifier</code> que l'on affecte \u00e0 ce mod\u00e8le depuis la fonction preload :</p> Chargement de MobileNet<pre><code>let classifier;\n\nfunction preload() {\n  classifier = ml5.imageClassifier(\"MobileNet\");\n}\n</code></pre> <p>on charge ensuite une image et on l'affiche dans le canvas :</p> Chargement d'une image<pre><code>let classifier;\nlet img;\n\nfunction preload() {\n  classifier = ml5.imageClassifier(\"MobileNet\");\n  img = loadImage('./images/guitare.png');\n}\n\n% ...\n\nfunction draw() {\n  background(220);\n  image(img, 0, 0, 400, 400);\n}\n</code></pre> <p>et enfin on \u00e9value cette image avec la m\u00e9thode classify :</p> Classification<pre><code>let classifier;\nlet img;\n\nfunction preload() {\n  classifier = ml5.imageClassifier(\"MobileNet\");\n  img = loadImage('./images/guitare.png');\n}\n\nfunction gotResults(results)\u00a0{\n  console.log(results);\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  classifier.classify(img, gotResults);\n}\n\nfunction draw() {\n  background(220);\n  image(img, 0, 0, 400, 400);\n}\n</code></pre> <p>On obtient \u00e0 la fin :</p> <p> </p> <p>Important</p> <p>La fonction classify prend deux arguments :</p> <ul> <li>l'image \u00e0 classifier ;</li> <li>une fonction de traitement \u00e0 ex\u00e9cut\u00e9e apr\u00e8s la classification.</li> </ul> <p>Cette fonction de traitement poss\u00e8de un argument qui est un tableau des diff\u00e9rentes propositions de classification.</p> <p>On peut am\u00e9liorer la pr\u00e9sentation avec un affichage personnalis\u00e9 via le code : </p> Customisation de l'affichage<pre><code>function gotResults(results)\u00a0{\n  label = results[0].label;\n}\n\n% ...\n\nfunction draw() {\n  background(220);\n  image(img, 0, 0, 400, 400);\n\n  fill(0);\n  rectMode(CENTER);\n  rect(width/2, height-50, width, 50);\n\n  fill(255);\n  textSize(32);\n  textAlign(CENTER, CENTER);\n  text(label, width/2, height-50);\n}\n</code></pre> <p> </p> <p>on voit alors que le mod\u00e8le ne fournit pas toujours une r\u00e9ponse exacte.  </p> <p>Il est possible de classifier une image provenant d'une webcam en adaptant le code pr\u00e9c\u00e9dent pour un flux vid\u00e9o. On utilise alors la fonction classifyStart plut\u00f4t que classify pour que la classification se r\u00e9alise de mani\u00e8re continue.</p> Classification d'un flux vid\u00e9o<pre><code>let classifier;\nlet video;\nlet label = \"En attente...\";\n\nfunction preload() {\n  classifier = ml5.imageClassifier(\"MobileNet\");\n}\n\nfunction gotResults(results)\u00a0{\n  label = results[0].label;\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  video = createCapture(VIDEO);\n  video.hide();\n  classifier.classifyStart(video, gotResults);\n}\n\nfunction draw() {\n  background(220);\n  image(video, 0, 0, 640, 480);\n  fill(0);\n  rectMode(CENTER);\n  rect(width/2, height-50, width, 50);\n  fill(255);\n  textSize(32);\n  textAlign(CENTER, CENTER);\n  noStroke();\n  text(label, width/2, height-50);\n}\n</code></pre> <p> </p>"},{"location":"#teachable-machine","title":"Teachable machine","text":"<p>On vient de voir que les mod\u00e8les pr\u00e9d\u00e9finis ne sont pas aussi performant qu'esp\u00e9r\u00e9. Aussi pour certains projets plus sp\u00e9cifiques, il peut \u00eatre utile de d\u00e9finir son propre mod\u00e8le pour accro\u00eetre l'efficacit\u00e9 de la classification.  </p> <p>Cela est possible gr\u00e2ce \u00e0 l'outil en ligne teachablemachine que vous retrouverez en cliquant ici. Cet outil permet de cr\u00e9er son propre mod\u00e8le en associant \u00e0 une collection d'images un label pr\u00e9cis. On parle alors de donn\u00e9es lab\u00e9lis\u00e9es.</p> <p>Voici un exemple concret de son utilisation :</p> <p> </p>"}]}